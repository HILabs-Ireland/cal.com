name: PR Update

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

permissions:
  actions: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      has-code-changes: ${{ steps.filter.outputs.changes }}
      has-test-changes: ${{ steps.filter.outputs.tests }}
      has-api-changes: ${{ steps.filter.outputs.api }}
      commit-sha: ${{ steps.get_sha.outputs.commit-sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: ./.github/actions/dangerous-git-checkout
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.base_ref }}
          filters: |
            changes:
              - 'packages/**/*'
              - 'apps/**/*'
              - '**/*.ts'
              - '**/*.tsx'
              - '**/*.js'
              - '**/*.jsx'
              - '**/*.json'
              - '**/*.yml'
              - '**/*.yaml'
              - '!**/*.test.{ts,tsx,js,jsx}'
              - '!**/*.spec.{ts,tsx,js,jsx}'
              - '!**/__tests__/**'
              - '!**/test/**'
            tests:
              - '**/*.test.{ts,tsx,js,jsx}'
              - '**/*.spec.{ts,tsx,js,jsx}'
              - '**/__tests__/**'
              - '**/test/**'
              - 'tests/**'
            api:
              - 'packages/features/ee/**/*'
              - 'packages/core/**/*'
              - 'packages/app-store/**/*'
              - 'apps/api/**/*'
              - '**/package.json'
              - '**/yarn.lock'
      - name: Get Latest Commit SHA
        id: get_sha
        run: |
          echo "commit-sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  #  check-label:
#    needs: [changes]
#    runs-on: ubuntu-latest
#    name: Check for E2E label
#    permissions:
#      pull-requests: read
#    outputs:
#      run-e2e: ${{ steps.check-if-pr-has-label.outputs.run-e2e == 'true' && (github.event.action != 'labeled' || (github.event.action == 'labeled' && github.event.label.name == 'ready-for-e2e')) }}
#    steps:
#      - name: Check if PR exists with ready-for-e2e label for this SHA
#        id: check-if-pr-has-label
#        uses: actions/github-script@v7
#        with:
#          script: |
#            let labels = [];
#
#            if (context.payload.pull_request) {
#              labels = context.payload.pull_request.labels;
#            } else {
#              try {
#                const sha = '${{ needs.changes.outputs.commit-sha }}';
#                console.log('sha', sha);
#                const { data: prs } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
#                  owner: context.repo.owner,
#                  repo: context.repo.repo,
#                  commit_sha: sha
#                });
#
#                if (prs.length === 0) {
#                  core.setOutput('run-e2e', false);
#                  console.log(`No pull requests found for commit SHA ${sha}`);
#                  return;
#                }
#
#                const pr = prs[0];
#                console.log(`PR number: ${pr.number}`);
#                console.log(`PR title: ${pr.title}`);
#                console.log(`PR state: ${pr.state}`);
#                console.log(`PR URL: ${pr.html_url}`);
#
#                labels = pr.labels;
#              }
#              catch (e) {
#                core.setOutput('run-e2e', false);
#                console.log(e);
#              }
#            }
#
#            const labelFound = labels.map(l => l.name).includes('ready-for-e2e');
#            console.log('Found the label?', labelFound);
#            core.setOutput('run-e2e', labelFound);

  deps:
    name: Install dependencies
    if: ${{ needs.changes.outputs.has-code-changes == 'true' || needs.changes.outputs.has-test-changes == 'true' || needs.changes.outputs.has-api-changes == 'true' }}
    uses: ./.github/workflows/yarn-install.yml

  type-check:
    name: Type check
    needs: [deps]
    if: ${{ needs.changes.outputs.has-code-changes == 'true' }}
    uses: ./.github/workflows/check-types.yml
    secrets: inherit

  lint:
    name: Linters
    needs: [deps]
    if: ${{ needs.changes.outputs.has-code-changes == 'true' }}
    uses: ./.github/workflows/lint.yml
    secrets: inherit

  unit-test:
    name: Tests
    needs: [deps]
    if: ${{ needs.changes.outputs.has-code-changes == 'true' || needs.changes.outputs.has-test-changes == 'true' }}
    uses: ./.github/workflows/unit-tests.yml
    secrets: inherit
    
  test-setup:
    name: Test Setup
    needs: [deps]
    if: ${{ needs.changes.outputs.has-code-changes == 'true' || needs.changes.outputs.has-test-changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: ./.github/actions/dangerous-git-checkout
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: yarn
      - name: Cache test setup
        uses: actions/cache@v3
        with:
          path: |
            .next
            node_modules
            apps/web/.next
            packages/prisma/node_modules
          key: ${{ runner.os }}-test-setup-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-test-setup-

  build-api-v1:
    name: Production builds
    needs: [deps]
    if: ${{ needs.changes.outputs.has-code-changes == 'true' || needs.changes.outputs.has-api-changes == 'true' }}
    uses: ./.github/workflows/api-v1-production-build.yml
    secrets: inherit

  #build-api-v2:
  #  name: Production builds
  #  needs: [changes, check-label, deps]
  #  if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
  #  uses: ./.github/workflows/api-v2-production-build.yml
  #  secrets: inherit

 #build-atoms:
 #   name: Production builds
 #   needs: [changes, check-label, deps]
 #   if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
 #   uses: ./.github/workflows/atoms-production-build.yml
 #   secrets: inherit

  #build-docs:
  #  name: Production builds
  #  needs: [changes, check-label, deps]
  #  if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
  #  uses: ./.github/workflows/docs-build.yml
  #  secrets: inherit

  build:
    name: Production builds
    needs: [deps, type-check, lint]
    if: ${{ needs.changes.outputs.has-code-changes == 'true' }}
    uses: ./.github/workflows/production-build-without-database.yml
    secrets: inherit

  integration-test:
    name: Tests
    needs: [test-setup, build-api-v1]
    if: ${{ needs.changes.outputs.has-code-changes == 'true' || needs.changes.outputs.has-test-changes == 'true' }}
    uses: ./.github/workflows/integration-tests.yml
    secrets: inherit

  e2e:
    name: Tests
    needs: [test-setup, build-api-v1]
    if: ${{ needs.changes.outputs.has-code-changes == 'true' || needs.changes.outputs.has-test-changes == 'true' }}
    uses: ./.github/workflows/e2e.yml
    secrets: inherit

#  e2e-api-v2:
#    name: Tests
#    needs: [changes, check-label, build, build-api-v1]
#    if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
#    uses: ./.github/workflows/e2e-api-v2.yml
#    secrets: inherit

#  e2e-app-store:
#    name: Tests
#    needs: [changes, build, build-api-v1]
#    if: ${{ needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
#    uses: ./.github/workflows/e2e-app-store.yml
#    secrets: inherit

  e2e-embed:
    name: Tests
    needs: [test-setup, build-api-v1]
    if: ${{ needs.changes.outputs.has-code-changes == 'true' || needs.changes.outputs.has-test-changes == 'true' }}
    uses: ./.github/workflows/e2e-embed.yml
    secrets: inherit

  e2e-embed-react:
    name: Tests
    needs: [test-setup, build-api-v1]
    if: ${{ needs.changes.outputs.has-code-changes == 'true' || needs.changes.outputs.has-test-changes == 'true' }}
    uses: ./.github/workflows/e2e-embed-react.yml
    secrets: inherit

  analyze:
    name: Analyze Build
    needs: [build]
    uses: ./.github/workflows/nextjs-bundle-analysis.yml
    secrets: inherit

  merge-reports:
    name: Merge reports
    if: ${{ !cancelled() && (needs.changes.outputs.has-code-changes == 'true' || needs.changes.outputs.has-test-changes == 'true') }}
    needs: [e2e, e2e-embed, e2e-embed-react]
    uses: ./.github/workflows/merge-reports.yml
    secrets: inherit

#  publish-report:
#    name: Publish HTML report
#    if: ${{ !cancelled() && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
#    permissions:
#      contents: write
#      issues: write
#      pull-requests: write
#    needs: [changes, merge-reports]
#    uses: ./.github/workflows/publish-report.yml
#    secrets: inherit

  required:
    needs:
      [
        lint,
        type-check,
        unit-test,
        integration-test,
        build,
        build-api-v1,
        e2e,
        e2e-embed,
        e2e-embed-react
      ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: fail if conditional jobs failed
        if: (needs.changes.outputs.has-code-changes == 'true' || needs.changes.outputs.has-test-changes == 'true') && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled'))
        run: exit 1
